import { VARIABLES_APP } from './app'
import { VARIABLES_API } from './api'
import { VARIABLES_AUTH } from './auth'
import { VARIABLES_DATABASE } from './database'

export const VALUES_APP = (): {
    API: { URL_BASE: string, PORT: number },
    CONFIGURATION_DATABASE: { HOST: string, PORT: number, USER: string, PASSWORD: string, DATABASE: string },
    AUTH: { KEY_APP: string, EXPIRES_IN: number }, EXPRESS: { SESSION_SECRET: string }, FILE: { UPLOAD: string }
} => {
    const IS_PRODUCTION = process.env.NODE_ENV == "production" || false;
    return {
        API: {
            URL_BASE: IS_PRODUCTION ? VARIABLES_API.URL_BASE.prod : VARIABLES_API.URL_BASE.dev,
            PORT: IS_PRODUCTION ? VARIABLES_API.PORT.prod : VARIABLES_API.PORT.dev
        }, CONFIGURATION_DATABASE: {
            HOST: IS_PRODUCTION ? VARIABLES_DATABASE.HOST.prod : VARIABLES_DATABASE.HOST.dev,
            PORT: IS_PRODUCTION ? VARIABLES_DATABASE.PORT.prod : VARIABLES_DATABASE.PORT.dev,
            USER: IS_PRODUCTION ? VARIABLES_DATABASE.USER.prod : VARIABLES_DATABASE.USER.dev,
            PASSWORD: IS_PRODUCTION ? VARIABLES_DATABASE.PASSWORD.prod : VARIABLES_DATABASE.PASSWORD.dev,
            DATABASE: IS_PRODUCTION ? VARIABLES_DATABASE.DATABASE.prod : VARIABLES_DATABASE.DATABASE.dev
        }, AUTH: {
            KEY_APP: IS_PRODUCTION ? VARIABLES_AUTH.KEY_APP.prod : VARIABLES_AUTH.KEY_APP.dev,
            EXPIRES_IN: IS_PRODUCTION ? VARIABLES_AUTH.EXPIRES_IN.prod : VARIABLES_AUTH.EXPIRES_IN.dev
        },
        EXPRESS: { SESSION_SECRET: IS_PRODUCTION ? VARIABLES_APP.EXPRESS.SESSION_SECRET.prod : VARIABLES_APP.EXPRESS.SESSION_SECRET.dev },
        FILE: { UPLOAD: IS_PRODUCTION ? VARIABLES_APP.FILE.UPLOAD.prod : VARIABLES_APP.FILE.UPLOAD.dev }
    }
}